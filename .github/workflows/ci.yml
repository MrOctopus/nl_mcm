name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'main/**'
      - 'example/**'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.x']

    steps:
    - uses: actions/checkout@v2
      with:
        path: ./repo

    - name: Pull papyrus compiler
      uses: actions/checkout@v2
      with:
        repository: MrOctopus/papyrus-compiler
        token: ${{ secrets.PRIVATE_TOKEN }}
        path: ./compiler

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Get latest Pyro release
      id: pyro_asset
      uses: MrOctopus/download-asset-action@main
      with:
        repository: fireundubh/pyro
        excludes: draft
        asset: pyro
    
    - name: Extract Pyro
      run: 7z x ${Env:file_name} -opyro
      env: 
        file_name: ${{ steps.pyro_asset.outputs.name }}

    - name: Build releases
      run: |
        .\pyro\pyro --game-path . --compiler-path ${Env:ppj_c} --flags-path ${Env:ppj_f} --access-token ${Env:git_t} .\repo\main\sse.ppj
        .\pyro\pyro --game-path . --compiler-path ${Env:ppj_c} --flags-path ${Env:ppj_f} --access-token ${Env:git_t} .\repo\example\sse.ppj
      env:
        ppj_c: compiler\PapyrusCompiler.exe
        ppj_f: compiler\TESV_Papyrus_Flags.flg
        git_t: ${{ secrets.PRIVATE_TOKEN }}

    - name: Prepare upload
      if: success()
      run: |
        cd repo\dist
        7z x *zip -o*

    - name: Upload main release
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: nl_mcm_${{ github.event.repository.pushed_at }}
        path: './repo/dist/nl_mcm - SSE'

    - name: Upload example release
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: nl_mcm_example_${{ github.event.repository.pushed_at }}
        path: './repo/dist/nl_mcm_example - SSE'
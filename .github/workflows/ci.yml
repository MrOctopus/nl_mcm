name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - 'main/**'
    - 'examples/**'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        project-path: 
        - 'main\sse.ppj'
        - 'examples\sse.ppj'
        - 'examples\nl_curios\sse.ppj'
        - 'examples\nl_utilities\sse.ppj'
    env:
      python-version: 3.x
      python-arch: x64

    steps:
    - uses: actions/checkout@v2
      with:
        path: ./repo

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}
        architecture:  ${{ env.python-arch }}

    - name: Pull papyrus compiler
      uses: actions/checkout@v2
      with:
        repository: MrOctopus/papyrus-compiler
        token: ${{ secrets.PRIVATE_TOKEN }}
        path: ./compiler

    - name: Get latest Pyro release
      id: pyro_asset
      uses: MrOctopus/download-asset-action@main
      with:
        repository: fireundubh/pyro
        excludes: draft
        asset: pyro

    - name: Extract Pyro
      run: 7z x ${Env:release_name} -opyro
      env: 
        release_name: ${{ steps.pyro_asset.outputs.name }}

    - name: Build releases
      run: |
        .\pyro\pyro --game-path . --compiler-path ${Env:ppj_c} --flags-path ${Env:ppj_f} --access-token ${Env:ppj_t} .\repo\${Env:ppj_p}
      env: 
        ppj_c: compiler\PapyrusCompiler.exe
        ppj_f: compiler\TESV_Papyrus_Flags.flg
        ppj_t: ${{ secrets.PRIVATE_TOKEN }}
        ppj_p: ${{ matrix.project-path }}

    - name: Prepare upload
      if: success()
      run: |
        cd repo\dist
        7z x *zip -o*
        echo "build_name=$(Get-ChildItem -Filter *. -Name)" >> ${Env:GITHUB_ENV}

    - name: Upload release
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.build_name }}
        path: ./repo/dist/${{ env.build_name }}
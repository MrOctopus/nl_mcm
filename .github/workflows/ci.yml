name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'main/**'
      - 'example/**'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.x']
        project-path: ['main\sse', 'example\sse']
    env:
      python-arch: x64

    steps:
    - uses: actions/checkout@v2
      with:
        path: ./repo

    - id: cache
      uses: actions/cache@v2
      with:
        path: |
          compiler
          pyro
        key: ${{ runner.os }}-compilers

    - name: Pull papyrus compiler
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: MrOctopus/papyrus-compiler
        token: ${{ secrets.PRIVATE_TOKEN }}
        path: ./compiler

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture:  ${{ env.python-arch }}

    - name: Get latest Pyro release
      id: pyro_asset
      if: steps.cache.outputs.cache-hit != 'true'
      uses: MrOctopus/download-asset-action@main
      with:
        repository: fireundubh/pyro
        excludes: draft
        asset: pyro
    
    - name: Extract Pyro
      if: steps.cache.outputs.cache-hit != 'true'
      run: 7z x ${Env:release_name} -opyro
      env: 
        release_name: ${{ steps.pyro_asset.outputs.name }}

    - name: Build releases
      run: |
        .\pyro\pyro --game-path . --compiler-path ${Env:ppj_c} --flags-path ${Env:ppj_f} --access-token ${Env:ppj_t} .\repo\${Env:ppj_p}.ppj
      env: 
        ppj_c: compiler\PapyrusCompiler.exe
        ppj_f: compiler\TESV_Papyrus_Flags.flg
        ppj_t: ${{ secrets.PRIVATE_TOKEN }}
        ppj_p: ${{ matrix.project-path }}

    - name: Prepare upload
      if: success()
      run: |
        cd repo\dist
        7z x *zip -o*
        Get-ChildItem -Filter *. | Select-Object Name | ft -hidetableheaders >> $env:build_name

    - name: Upload release
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.build_name }}_${{ github.event.repository.pushed_at }}
        path: ./repo/dist/*